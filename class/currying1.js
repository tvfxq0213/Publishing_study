// 커링(Currying)


// 커링이란 무엇인가?
// 여러 개의 인자를 가지는 함수를 단일 인자로 갖는 함수들의 계층구조로(순서로) 바꾸는 것.
// 쉽게말해, 단일 인자를 받는 함수들을 쭈우욱 연결시킨 것. --> 많아지면 메모리 문제가 발생할 수 있으므로 장/단점을 고려!
// 계속해서 함수가 연결되어진다면 --> 콜백 지옥과 같은 경험도 할 수 있다.
// 클로저(Closure)에 대한 개념이해가 필수적으로 필요.
// 학습순서 : 클로저 학습 --> 커링 학습.

// 값은 언제 반환?
// 함수가 필요로 하는 인자의 갯수 만큼 충족되지 않았다면 		--> 계속 함수를 반환.
// 만약, 함수가 필요로 하는 인자의 갯수를 모두 충족시켰다면 	--> 그때 최종적인 값을 반환.


// [1] : 기존 함수 --> 인자를 2개 받아서 더하는 함수.
function sum1( x, y ) {
	return x + y;
};
console.log( sum1( 3, 4 ) );
console.log( '--------------------------------------' );


// [2] : 커링 함수 --> 단일 인자만 받아서 처리.
function sum( x ) {
	return function( y ) {
		return x + y;
	}
}
const sum2 = sum(3);
console.log( sum2(7) );		// 10
console.log( sum(4)(8) );	// 12
console.log( '--------------------------------------' );























